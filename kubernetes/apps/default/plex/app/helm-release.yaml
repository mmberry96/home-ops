---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: generic-device-plugin
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      plex:
        initContainers:
          zurg:
            restartPolicy: Always
            image:
              repository: ghcr.io/mmberry96/zurg
              tag: 0.1.10@sha256:df24882c0b3caf78f7d6924bebf1db6cbc04db3e108a6726d17d4ed485f1852b
            env:
              PLEX_URL: http://plex.default.svc.cluster.local:32400
              ZURG_MOUNT: /debrid
            envFrom:
              - secretRef:
                  name: plex-secret
            probes:
              liveness: &zurg-probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /dav/version.txt
                    port: 9999
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *zurg-probes
              startup:
                enabled: true
                port: 9999
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              runAsUser: 65534
              runAsGroup: 65534
              fsGroup: 65534
              allowPrivilegeEscalation: false
              capabilities: { drop: ['ALL'] }
          rclone:
            restartPolicy: Always
            image:
              repository: rclone/rclone
              tag: 1.68.1
            args:
              - mount
              - 'zurg:'
              - '/data'
              - --allow-non-empty
              - --allow-other
              - --umask=002
              - --dir-cache-time=10s
              - --vfs-cache-mode=full
              - --vfs-cache-max-size=50G
            env:
              RCLONE_CONFIG: /config/rclone/rclone.conf
            securityContext:
              privileged: true
              capabilities:
                drop: ['ALL']
                add: ['SYS_ADMIN']
            resources:
              limits:
                squat.ai/fuse: 1
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.4.9463-630c9f557@sha256:1f66577fe4fa60dc0984d568ca55fb5c2b3fae8498ef96ac1ed57710517552be
            env:
              TZ: America/Chicago
              PLEX_ADVERTISE_URL: https://plex.mordex.io:443,http://10.30.0.101:32400
              PLEX_NO_AUTH_NETWORKS: 10.10.0.0/24
            probes:
              liveness: &plex-probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *plex-probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ['ALL'] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi
    defaultPodOptions:
      annotations:
        reloader.stakater.com/auto: 'true'
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: 'true'
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: 10.30.0.101
        ports:
          http:
            port: 32400
          zurg:
            port: 9999
            primary: false
    ingress:
      app:
        annotations:
          nginx.ingress.kubernetes.io/backend-server: HTTPS
          nginx.ingress.kubernetes.io/server-snippet: |
            location ~ ^/library/streams {
              proxy_set_header        Range "";
              proxy_pass              http://plex.default.svc.cluster.local:32400;
              proxy_http_version      1.1;
            }
        className: internal
        hosts:
          - host: '{{ .Release.Name }}.mordex.io'
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    # route:
    #   http:
    #     kind: HTTPRoute
    #     labels:
    #       route-type: internal
    #     parentRefs:
    #       - name: traefik-internal-gateway
    #         sectionName: web
    #         namespace: network
    #     hostnames:
    #       - plex.mordex.io
    #     rules:
    #       - filters:
    #           - type: RequestRedirect
    #             requestRedirect:
    #               scheme: https
    #   https:
    #     kind: HTTPRoute
    #     labels:
    #       route-type: internal
    #     parentRefs:
    #       - name: traefik-internal-gateway
    #         sectionName: websecure
    #         namespace: network
    #     hostnames:
    #       - plex.mordex.io
    #     rules:
    #       - matches:
    #           - path:
    #               type: PathPrefix
    #               value: /
    #         backendRefs:
    #           - name: app
    #             port: 32400
    persistence:
      config:
        existingClaim: plex
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server
      config-cache:
        existingClaim: plex-cache
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/cache
      config-logs:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs
            zurg:
              - path: /app/logs
      media:
        type: nfs
        server: truenas.mordex.io
        path: /mnt/storage0/media
        advancedMounts:
          plex:
            app:
              - path: /media
                readOnly: true
      rclone-cache:
        type: emptyDir
        advancedMounts:
          plex:
            rclone:
              - path: /.cache
      tmp:
        type: emptyDir
      torrents:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /debrid
                mountPropagation: HostToContainer
            rclone:
              - path: /data
                mountPropagation: Bidirectional
      transcode:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /transcode
      zurg-config:
        type: configMap
        name: zurg-configmap
        advancedMounts:
          plex:
            rclone:
              - path: /config/rclone/rclone.conf
                subPath: rclone
            zurg:
              - path: /app/zurg_template.yml
                subPath: zurg
              - path: /app/plex_update.sh
                subPath: plex_update
      zurg-data:
        existingClaim: zurg-data
        advancedMounts:
          plex:
            zurg:
              - path: /app/data
